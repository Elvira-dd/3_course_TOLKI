<div class="O_PlaylistPage Edit">
    <%= link_to :back do %>
    <div class="W_BackLink">
        <div class="Q_Arrow backWhite"></div>
    </div>
    <% end %>

    <%= form_with model: @playlist, local: true, html: { multipart: true } do |f| %>

    <div class="W_FavoriteBg" id="cover-upload-wrapper" style="background-image: url('<%= asset_path("theme_cover/#{@playlist.cover}.png") %>'); cursor: pointer;">

        <div class="Title">
            <h1>
                <%= f.text_field :name, class: "unstyled-input", placeholder: "Название плейлиста", id: "playlist-name" %>
            </h1>
        </div>
    </div>

    <div class="M_UserCard" style="justify-content: flex-start; gap: 12px">
        <% if current_user.profile.avatar.present? %>
        <%= image_tag current_user.profile.avatar, alt: current_user.profile.name, class: "UserAvatar" %>
        <% end %>
        <div class="C_PLaylisttTitle">
            <div style="display:flex; gap:2px; flex-direction:column">
                <h4><%= current_user.profile.name %></h4>
                <p class="small">знаток подкастов <%= current_user.profile.level %> уровня</p>
            </div>
        </div>
    </div>

    <div class="C_PlaylistAddBlock">
        <div style="margin-top: 16px;">
            <%= f.label :cover, "Выберите фон обложки", class: "InputLabel" %>
            <%= f.select :cover,
              options_for_select((1..9).map { |i| ["Обложка #{i}", "theme_cover_#{i}"] }, selected: @playlist.cover),
              {},
              { class: "InputContainer", id: "cover-select" } %>
        </div>

        <div style="margin-top: 32px;">
            <%= f.submit "Сохранить плейлист", class: "A_Button SecondaryMedium white" %>
        </div>
    </div>

    <% end %>

    <div class="C_ChartList" style="margin-top: 32px;">
        <% @playlist.issues.each_with_index do |issue, index| %>
        <%= render partial: "chartcard", locals: { issue: issue, position: index + 1 } %>
        <% end %>
    </div>
</div>

<%= javascript_tag do %>
document.addEventListener("DOMContentLoaded", function () {
// Обработчик для кнопки добавления выпуска — если нужна
const button = document.getElementById("add_issue_button");
const select = document.getElementById("issue_select");
if (button && select) {
button.addEventListener("click", function () {
const issueId = select.value;
if (issueId) {
let url = this.dataset.addIssueUrl.replace("ISSUE_ID_PLACEHOLDER", issueId);
window.location.href = url;
} else {
alert("Выберите выпуск!");
}
});
}

// Обработчик клика по обложке (фон) для выбора файла — если используешь загрузку своей картинки
const wrapper = document.getElementById("cover-upload-wrapper");
const fileInput = document.getElementById("cover-upload");

if (wrapper && fileInput) {
wrapper.addEventListener("click", function () {
fileInput.click();
});

fileInput.addEventListener("change", function (event) {
const file = event.target.files[0];
if (file && file.type.startsWith("image/")) {
const reader = new FileReader();
reader.onload = function (e) {
wrapper.style.backgroundImage = `url('${e.target.result}')`;
};
reader.readAsDataURL(file);
}
});
}

// Обновление фона при выборе обложки из селекта
const coverSelect = document.getElementById("cover-select");
if (coverSelect && wrapper) {
coverSelect.addEventListener("change", function () {
const selected = this.value;
wrapper.style.backgroundImage = `url('/assets/theme_cover/${selected}.png')`;
});
}
});
<% end %>